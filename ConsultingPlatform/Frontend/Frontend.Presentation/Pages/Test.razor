@page "/test"
@using Frontend.Models.Defaults
@using Frontend.Presentation.Components
@inject NavigationManager _nav
@attribute [Authorize]

@if (!_showResults){
<RadzenCard Style="height:80vh">

    <div style=@(_selectedBlock != DreyfusBlock.Novice ? "display:none" : "")>
        <TestQuestion QuestionBlock="DreyfusBlock.Novice" Question=@DreyfusQuestions.Question1.Question
                      Options=@DreyfusQuestions.Question1.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.Novice" Question=@DreyfusQuestions.Question2.Question
                      Options=@DreyfusQuestions.Question2.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.Novice" Question=@DreyfusQuestions.Question3.Question
                      Options=@DreyfusQuestions.Question3.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.Novice" Question=@DreyfusQuestions.Question4.Question
                      Options=@DreyfusQuestions.Question4.QuestionRates @bind-Answer="_results" />
    </div>
    
    <div style=@(_selectedBlock != DreyfusBlock.AdvancedBeginner ? "display:none" : "")>
        <TestQuestion QuestionBlock="DreyfusBlock.AdvancedBeginner" Question=@DreyfusQuestions.Question5.Question
                      Options=@DreyfusQuestions.Question5.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.AdvancedBeginner" Question=@DreyfusQuestions.Question6.Question
                      Options=@DreyfusQuestions.Question6.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.AdvancedBeginner" Question=@DreyfusQuestions.Question7.Question
                      Options=@DreyfusQuestions.Question7.QuestionRates @bind-Answer="_results" />
    </div>
    
    <div style=@(_selectedBlock != DreyfusBlock.Competent ? "display:none" : "")>
        <TestQuestion QuestionBlock="DreyfusBlock.Competent" Question=@DreyfusQuestions.Question8.Question
                      Options=@DreyfusQuestions.Question8.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.Competent" Question=@DreyfusQuestions.Question9.Question
                      Options=@DreyfusQuestions.Question9.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.Competent" Question=@DreyfusQuestions.Question10.Question
                      Options=@DreyfusQuestions.Question10.QuestionRates @bind-Answer="_results" />
    </div>
    
    <div style=@(_selectedBlock != DreyfusBlock.Proficient ? "display:none" : "")>
        <TestQuestion QuestionBlock="DreyfusBlock.Proficient" Question=@DreyfusQuestions.Question11.Question
                      Options=@DreyfusQuestions.Question11.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.Proficient" Question=@DreyfusQuestions.Question12.Question
                      Options=@DreyfusQuestions.Question12.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.Proficient" Question=@DreyfusQuestions.Question13.Question
                      Options=@DreyfusQuestions.Question13.QuestionRates @bind-Answer="_results" />
    </div>
    
    <div style=@(_selectedBlock != DreyfusBlock.Expert ? "display:none" : "")>
        <TestQuestion QuestionBlock="DreyfusBlock.Expert" Question=@DreyfusQuestions.Question14.Question
                      Options=@DreyfusQuestions.Question14.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.Expert" Question=@DreyfusQuestions.Question15.Question
                      Options=@DreyfusQuestions.Question15.QuestionRates @bind-Answer="_results" />

        <TestQuestion QuestionBlock="DreyfusBlock.Expert" Question=@DreyfusQuestions.Question16.Question
                      Options=@DreyfusQuestions.Question16.QuestionRates @bind-Answer="_results" />
    </div>

</RadzenCard>

<RadzenStack Gap="20px" Orientation="Orientation.Horizontal" Style="margin-top:10px;  justify-content:center !important;">
    <div style="gap: 50px; display:flex;flex-direction:row; align-items:center;">
        <RadzenButton Text="Previous" ButtonStyle="ButtonStyle.Secondary"
                      Disabled=@(_selectedBlock == DreyfusBlock.Novice)
                      Style="width:100px;padding:0; background-color: #BA68C8;"
                      Click="PreviousHandler"></RadzenButton>
                      
        @if (_selectedBlock == DreyfusBlock.Expert)
        {
            <RadzenButton Text="Finish" ButtonStyle="ButtonStyle.Primary"
                          Style="width:100px;padding:0; background-color: mediumseagreen;"
                          Click="FinishTest" />
        }
        else
        {
            <RadzenButton Text="Next" ButtonStyle="ButtonStyle.Primary"
                          Style="width:100px;padding:0; background-color: #81C784;"
                          Click="NextHandler"/>
        }
        
    </div>
    
</RadzenStack>
}
else
{
    <div style="justify-content:center !important;">
    <RadzenCard Style="height:80vh; display: flex; flex-direction: column; justify-content: center;">
        <h3 style="text-align: center; font-size: 24px; font-weight: bold; color: #2c6e49;">Ваш результат: @OverallScore</h3>
        <p style="text-align: center; font-size: 18px; color: #555; margin-top: 10px;">@GetLevelDescription(OverallScore)</p>

        <RadzenChart Width="700px" Height="400px">
                <RadzenColumnSeries Data="@ChartData" CategoryProperty="Block" ValueProperty="Score" Fill="#81C784" />
            <RadzenLegend Visible="false" />
        </RadzenChart>

        
    </RadzenCard>
    <RadzenButton Text="Пройти знову" Click="RestartTest" Style="margin-top:20px; justify-content:center !important; align-items:center; background-color: #BA68C8;" />
    </div>
}

@code {
    private DreyfusSurveyResults _results = new();
    private DreyfusBlock _selectedBlock = DreyfusBlock.Novice;
    private bool _showResults = false; 
    public List<ChartDataPoint> ChartData { get; set; }
    public double OverallScore;
    private Dictionary<string, double> BlockScores;


    public void NextHandler()
    {
        _selectedBlock++;
        StateHasChanged();
    }

    public void PreviousHandler()
    {
        _selectedBlock--;
        StateHasChanged();
    }

    public void FinishTest()
    {
        _showResults = true;
        BlockScores = Enum.GetValues(typeof(DreyfusBlock))
            .Cast<DreyfusBlock>()
            .ToDictionary(
                block => block.ToString(),
                block => _results.GetAverageScoreForBlock(block)
            );
        OverallScore = _results.GetOverallTotalScore();

        ChartData = BlockScores.Select(kv => new ChartDataPoint
        {
            Block = kv.Key,
            Score = kv.Value
        }).ToList();

        StateHasChanged();
    }

    public class ChartDataPoint
    {
        public string Block { get; set; } = "";
        public double Score { get; set; }
    }

    private string GetLevelDescription(double score)
    {
        if (score < 30) return "Ви новачок. Ви тільки починаєте і ще не маєте великого досвіду.";
        if (score < 50) return "Ви початківець. У вас є основи, але потрібно працювати над удосконаленням.";
        if (score < 70) return "Ви компетентний. Ви вже маєте добрий рівень знань і досвіду.";
        if (score < 90) return "Ви просунутий. Ви володієте глибокими знаннями і практичними навичками.";
        return "Ви експерт. Ви володієте великим досвідом і здатні вирішувати складні задачі.";
    }

    private void RestartTest()
    {
        _selectedBlock = DreyfusBlock.Novice;
    }
}